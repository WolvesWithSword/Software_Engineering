// automatically generated by Xtext
grammar seproj.Cal with org.eclipse.xtext.common.Terminals

import "http://www.example.org/sEProj"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

VCalendar returns VCalendar:
	{VCalendar}
	'CALENDRIER'
	'{'
		(
			('SCALE' ':' calscale=EString)? &
			('METHODE' ':' method=EString)? &
//			('prodid' prodid=EString)? & //inutile car defini par notre implementation
//			('version' version=EString)? &
			( component+=Component ( "," component+=Component)* )?
		)
	'}';

Component returns Component:
	TemporalComponent
;

TemporalComponent returns TemporalComponent:
	VEvent | VTODO | VJournal
;

EString returns ecore::EString:
	STRING | ID;

VEvent returns VEvent:
	{VEvent} 
	'EVENEMENT' ':' summary=EString
	'{'
		(
			('UID' ':' UID=EString)? &//GEN AUTO
			('BLOQUANT' ':' transp=EString)? &//TRUE/FALSE
			('LIEU' ':' location=EString)? &
			('DESCRITPION' ':' description=EString)? &
			('STAMP' ':' dtstamp=Date)? & // ? AUTO ? 
			('DEBUT' ':' dtstart=Date)? &
			('FIN' ':' dtend=Date)? &
			('CREER' 'LE' ':' created=Date)? &
			('MODIFIER' 'LE' ':' last_modified=Date)? &
			('RECURRENCE' ':' rrule=RRule)? &
			('STATUS' ':' status=StatusVEvent)?
		)
	'}'
;
VTODO returns VTODO:
	{VTODO} 
	'TODO' ':' summary=EString
	'{'
		(
			('UID' ':' UID=EString)? &//GEN AUTO
			('LIEU' ':' location=EString)? &
			('DESCRITPION' ':' description=EString)? &
			('STAMP' ':' dtstamp=Date)? & // ? AUTO ? 
			('DEBUT' ':' dtstart=Date)? &
			('CREER' 'LE' ':' created=Date)? &
			('MODIFIER' 'LE' ':' last_modified=Date)? &
			('RECURRENCE' ':' rrule=RRule)? &
			('PRIORITE' ':' priority=EInt)? &
			('STATUS' ':' status=StatusVTODO)? &
			('POUR' 'LE' ':' due=Date)?
		)
	'}'
;
VJournal returns VJournal:
	{VJournal} 
	'Journal' ':' summary=EString
	'{'
		(
			('UID' ':' UID=EString)? &//GEN AUTO
			('DESCRITPION' ':' description=EString)? &
			('STAMP' ':' dtstamp=Date)? & // ? AUTO ? 
			('DEBUT' ':' dtstart=Date)? &
			('CREER' 'LE' ':' created=Date)? &
			('MODIFIER' 'LE' ':' last_modified=Date)? &
			('RECURRENCE' ':' rrule=RRule)? &
			('STATUS' ':' status=StatusVJournal)?
		)
	'}'
;

enum StatusVJournal returns StatusEnum:
	DRAFT = "BROUILLON" | FINAL = "FINAL" | CANCELLED = "ANNULE"
;
enum StatusVEvent returns StatusEnum:
	TENTATIVE = "TENTATIVE" | CONFIRMED = "CONFIRME" | CANCELLED = "ANNULE"
;

enum StatusVTODO returns StatusEnum:
	NEEDSACTION = "ACTION REQUISE" | COMPLETED = "COMPLETE" | INPROCESS = "EN COURS" | CANCELLED = "ANNULE"
;

Date returns Date:
	day=EInt'/'month=EInt'/'year=EInt('à' hour=EInt'h'(minute=EInt)?)?
	;
	

RRule returns RRule:
	'TOU(TE)S' 'LES' (interval=EInt)? freq=FreqEnum (count=EInt 'FOIS')?
	;

EInt returns ecore::EInt:
	INT;

enum FreqEnum returns FreqEnum:
				WEEKLY = 'SEMAINES' | MONTHLY = 'MOIS' | DAILY = 'JOURS' | YEARLY = 'ANS';
				
