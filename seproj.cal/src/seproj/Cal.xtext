// automatically generated by Xtext
grammar seproj.Cal with org.eclipse.xtext.common.Terminals

import "http://www.example.org/sEProj"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

VCalendar returns VCalendar:
	{VCalendar}
	'CALENDRIER'
	'{'
		(
			('SCALE' ':' calscale=EString)? &
			('METHODE' ':' method=EString)? 
//			('prodid' prodid=EString)? & //inutile car defini par notre implementation
//			('version' version=EString)? &
		)
		component+=Component*
	'}';

Component returns Component:
	(TemporalComponent|VTimeZone)
;

TemporalComponent returns TemporalComponent:
	VEvent | VTODO | VJournal
;

EString returns ecore::EString:
	STRING | ID;

VEvent returns VEvent:
	{VEvent} 
	'EVENEMENT' ':' summary=EString
	'{'
		(
			('UID' ':' UID=EString)? &//GEN AUTO
			('BLOQUANT' ':' transp=EString)? &//TRUE/FALSE
			('LIEU' ':' location=EString)? &
			('DESCRITPION' ':' description=EString)? &
			('STAMP' ':' dtstamp=Date)? & // ? AUTO ? 
			('DEBUT' ':' dtstart=Date)? &
			('FIN' ':' dtend=Date)? &
			('CREER' 'LE' ':' created=Date)? &
			('MODIFIER' 'LE' ':' last_modified=Date)? &
			('RECURRENCE' ':' rrule=RRule ('SAUF' ('LE' | 'LES') exdate+=Date ( ',' exdate+=Date)* )?)? &
			('STATUTS' ':' status=StatusVEvent)? 
		)
	'}'
;
VTODO returns VTODO:
	{VTODO} 
	'TODO' ':' summary=EString
	'{'
		(
			('UID' ':' UID=EString)? &//GEN AUTO
			('LIEU' ':' location=EString)? &
			('DESCRITPION' ':' description=EString)? &
			('STAMP' ':' dtstamp=Date)? & // ? AUTO ? 
			('DEBUT' ':' dtstart=Date)? &
			('CREER' 'LE' ':' created=Date)? &
			('MODIFIER' 'LE' ':' last_modified=Date)? &
			('RECURRENCE' ':' rrule=RRule & ('SAUF' ('LE' | 'LES') exdate+=Date ( ',' exdate+=Date)* )?)? &
			('PRIORITE' ':' priority=EInt)? &
			('STATUTS' ':' status=StatusVTODO)? &
			('POUR' 'LE' ':' due=Date)?
		)
	'}'
;

VTimeZone returns VTimeZone: 
	{VTimeZone} 
	'TIMEZONE'
	'{'
		('TZID' ':' TZID=EString) //obligatoire si il y a une time zone
		('TZURL' ':' TZURL=EString)?
	'}'
;

VJournal returns VJournal:
	{VJournal} 
	'Journal' ':' summary=EString
	'{'
		(
			('UID' ':' UID=EString)? &//GEN AUTO
			('DESCRITPION' ':' description=EString)? &
			('STAMP' ':' dtstamp=Date)? & // ? AUTO ? 
			('DEBUT' ':' dtstart=Date)? &
			('CREER' 'LE' ':' created=Date)? &
			('MODIFIER' 'LE' ':' last_modified=Date)? &
			('RECURRENCE' ':' rrule=RRule ('SAUF' ('LE' | 'LES') exdate+=Date ( 'ET' exdate+=Date)* )?)? &
			('STATUTS' ':' status=StatusVJournal)?
		)
	'}'
;

enum StatusVJournal returns StatusEnum:
	DRAFT = "BROUILLON" | FINAL = "FINAL" | CANCELLED = "ANNULE"
;
enum StatusVEvent returns StatusEnum:
	TENTATIVE = "TENTATIVE" | CONFIRMED = "CONFIRME" | CANCELLED = "ANNULE"
;

enum StatusVTODO returns StatusEnum:
	NEEDSACTION = "ACTION REQUISE" | COMPLETED = "COMPLETE" | INPROCESS = "EN COURS" | CANCELLED = "ANNULE"
;

Date returns Date:
	day=EInt'/'month=EInt'/'year=EInt('à' hour=EInt'h'(minute=EInt)?)?
;
	

RRule returns RRule:
	('TOUTES'| 'TOUS') 'LES' (interval=EInt)? 
	(freq=FreqEnum (count=EInt 'FOIS')?) ('SEULEMENT' entryDayNumber+=EntryDayNumber ('ET' entryDayNumber+=EntryDayNumber)*)?
;
	
EntryDayNumber returns EntryDAYNumber:
	 'LE' (byDayNumber=EInt ('ER'|'EME'))? byDay=EnumDay 
;

enum EnumDay returns DAY:
	MONDAY='LUNDI' | TUESDAY='MARDI' | WEDNESDAY='MERCREDI' | THURSDAY='JEUDI' | FRIDAY='VENDREDI' | SATURDAY='SAMEDI' | SUNDAY='DIMANCHE'
;

EInt returns ecore::EInt:
	INT;

enum FreqEnum returns FreqEnum:
				WEEKLY = 'SEMAINES' | MONTHLY = 'MOIS' | DAILY = 'JOURS' | YEARLY = 'ANS';
enum FreqEnumMonth returns FreqEnum:
				MONTHLY = 'MOIS';
				
